(self.webpackChunktech_details=self.webpackChunktech_details||[]).push([[5828],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return c},kt:function(){return d}});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),s=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(a),d=n,k=m["".concat(p,".").concat(d)]||m[d]||u[d]||o;return a?r.createElement(k,i(i({ref:t},c),{},{components:a})):r.createElement(k,i({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5173:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return c},default:function(){return m}});var r=a(22122),n=a(19756),o=(a(67294),a(3905)),i=["components"],l={hide_title:!0,sidebar_label:"Backup Dos"},p="Backup Dos",s={unversionedId:"hardware/jetson-tx2/backup-procedures",id:"hardware/jetson-tx2/backup-procedures",isDocsHomePage:!1,title:"Backup Dos",description:"How to save space before you back up",source:"@site/docs/hardware/jetson-tx2/backup-procedures.md",sourceDirName:"hardware/jetson-tx2",slug:"/hardware/jetson-tx2/backup-procedures",permalink:"/tech-details/docs/hardware/jetson-tx2/backup-procedures",version:"current",lastUpdatedAt:1628956952,formattedLastUpdatedAt:"8/14/2021",frontMatter:{hide_title:!0,sidebar_label:"Backup Dos"},sidebar:"tx2Sidebar",previous:{title:"Flash An Existing Image",permalink:"/tech-details/docs/hardware/jetson-tx2/flash-existing-image"},next:{title:"Mount Image as Loopback",permalink:"/tech-details/docs/hardware/jetson-tx2/mount-image-as-loopback"}},c=[{value:"How to save space before you back up",id:"how-to-save-space-before-you-back-up",children:[]},{value:"Backup the Image File",id:"backup-the-image-file",children:[]},{value:"Creating Compressed File (tar.xz)",id:"creating-compressed-file-tarxz",children:[]}],u={toc:c};function m(e){var t=e.components,a=(0,n.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"backup-dos"},"Backup Dos"),(0,o.kt)("h2",{id:"how-to-save-space-before-you-back-up"},"How to save space before you back up"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Clear trash and caches"),(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"at ",(0,o.kt)("inlineCode",{parentName:"li"},"~/.cache/chromium/Default")),(0,o.kt)("li",{parentName:"ol"},"at ",(0,o.kt)("inlineCode",{parentName:"li"},"~/.ros")),(0,o.kt)("li",{parentName:"ol"},"'pip3 cache purge'"),(0,o.kt)("li",{parentName:"ol"},"Lastly, at  ",(0,o.kt)("inlineCode",{parentName:"li"},"~/.local/share/Trash/expunged/*")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"To check large files and directories "),(0,o.kt)("p",{parentName:"li"}," ",(0,o.kt)("inlineCode",{parentName:"p"},"sudo du -Sh | sort -rh | head -20"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"To clear unallocated disk space to zero, use ",(0,o.kt)("inlineCode",{parentName:"p"},"zerofree")," utility (apt install)"),(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"boot into single user mode ",(0,o.kt)("inlineCode",{parentName:"p"},"sudo init 1")," (init level 3 may not work. If no keyboard response, try switch to init 3 first and then into init 1 state, after a fresh reboot)")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"remount the filesystem to readonly (if failed, reboot the system and try again) ",(0,o.kt)("inlineCode",{parentName:"p"},"mount -o remount,ro /dev/mmcblk0p1")),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"If the mounting is busy try stop services as followed"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"killall dhclient")," (this should make things work already)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"systemctl stop rsyslog")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"systemctl stop network-manager")),(0,o.kt)("li",{parentName:"ul"},"if still, run ",(0,o.kt)("inlineCode",{parentName:"li"},"systemctl status")," to identify further things to stop"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"perform zerofree command ",(0,o.kt)("inlineCode",{parentName:"p"},"zerofree -v /dev/mmcblk0p1"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"regarding the meaning of the zerofree output:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-markdown"},"So after some detailed analysis it would look like those numbers are as follows:\n- number of nonzero blocks encountered\n- number of free blocks within the filesystem\n- total number of blocks within the filesystem\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"poweroff")," and start backup in recovery mode"))))),(0,o.kt)("h2",{id:"backup-the-image-file"},"Backup the Image File"),(0,o.kt)("p",null,"In the ",(0,o.kt)("inlineCode",{parentName:"p"},"Linux_for_Tegra/ folder"),", perform backup of the APP partition"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"sudo ./flash.sh -r -k APP -G backup.img jetson-tx2 mmcblk0p1"))),(0,o.kt)("h2",{id:"creating-compressed-file-tarxz"},"Creating Compressed File (tar.xz)"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"sudo XZ_OPT=-T0 tar -Jcvf xxx.tar.xz Linux_for_Tegra")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"sudo")," is used to be able to access all files"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-T0")," is to enable multi-threading (",(0,o.kt)("inlineCode",{parentName:"li"},"tar -Jcvf file.tar.xz /path")," is too slow, as it is single threaded)")),(0,o.kt)("hr",null),(0,o.kt)("p",null,"References:\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.nvidia.com/jetson/l4t/index.html#page/Tegra%2520Linux%2520Driver%2520Package%2520Development%2520Guide%2Fflashing.html%23"},"Official Flashing Guide")))}m.isMDXComponent=!0}}]);