(self.webpackChunktech_details=self.webpackChunktech_details||[]).push([[1304],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return m},kt:function(){return c}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=s(a),c=r,k=d["".concat(p,".").concat(c)]||d[c]||u[c]||l;return a?n.createElement(k,i(i({ref:t},m),{},{components:a})):n.createElement(k,i({ref:t},m))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8964:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return m},default:function(){return d}});var n=a(22122),r=a(19756),l=(a(67294),a(3905)),i=["components"],o={hide_title:!0,sidebar_label:"Getting Started"},p="Getting Started",s={unversionedId:"systems/pixhawk_v1/getting-started",id:"systems/pixhawk_v1/getting-started",isDocsHomePage:!1,title:"Getting Started",description:"Setup",source:"@site/docs/systems/pixhawk_v1/getting-started.md",sourceDirName:"systems/pixhawk_v1",slug:"/systems/pixhawk_v1/getting-started",permalink:"/tech-details/docs/systems/pixhawk_v1/getting-started",version:"current",lastUpdatedAt:1628956952,formattedLastUpdatedAt:"8/14/2021",frontMatter:{hide_title:!0,sidebar_label:"Getting Started"},sidebar:"systemsSidebar",previous:{title:"pixhawk Project",permalink:"/tech-details/docs/systems/pixhawk_v1/pixhawk"},next:{title:"Visual-Inertial Odometry",permalink:"/tech-details/docs/systems/pixhawk_v1/VIO"}},m=[{value:"Setup",id:"setup",children:[{value:"Drone system",id:"drone-system",children:[]},{value:"Web-UI",id:"web-ui",children:[]}]},{value:"Usage",id:"usage",children:[{value:"Step 1: Common setting before testing",id:"step-1-common-setting-before-testing",children:[]},{value:"Step 2: Running",id:"step-2-running",children:[]},{value:"Step 3: System checking",id:"step-3-system-checking",children:[]},{value:"Step 4: Take off",id:"step-4-take-off",children:[]},{value:"step 5: landing",id:"step-5-landing",children:[]}]},{value:"Useful Command",id:"useful-command",children:[]}],u={toc:m};function d(e){var t=e.components,a=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"getting-started"},"Getting Started"),(0,l.kt)("h2",{id:"setup"},"Setup"),(0,l.kt)("h3",{id:"drone-system"},"Drone system"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Prepare the downloading script"),(0,l.kt)("p",{parentName:"li"},"Running following command to download the script for installation, replace the ",(0,l.kt)("inlineCode",{parentName:"p"},"YOURNAME")," with your account."))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ wget --ask-password --user=YOURNAME -c https://bitbucket.org/nusuav/pixhawk_v1/raw/a6268c9207d70f689612ac2a5d5759749897c07f/pixhawk_setup.sh \nFor example:\nwget --ask-password --user=Yu_ZHOU -c https://bitbucket.org/nusuav/pixhawk_v1/raw/a6268c9207d70f689612ac2a5d5759749897c07f/pixhawk_setup.sh \n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Installation"),(0,l.kt)("p",{parentName:"li"},"Set up working directory and install the repository. Note that the script will auto create the directory catkin_ws under pixhawk_DIR folder. "))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'$ export pixhawk_DIR="Your directory" (The default directory is `/media/nvidia/SD/`.)\n$ sh pixhawk_setup.sh\n')),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Compiling"),(0,l.kt)("p",{parentName:"li"},"The step 2 will auto compile the package, if you want to do it mannully again, please run the following command."))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ cd catkin_ws\n$ catkin build --cmake-args -DCMAKE_BUILD_TYPE=Release\n")),(0,l.kt)("h3",{id:"web-ui"},"Web-UI"),(0,l.kt)("p",null,"Please Refer to the Web-UI page."),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("h3",{id:"step-1-common-setting-before-testing"},"Step 1: Common setting before testing"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Waypoints file "),(0,l.kt)("p",{parentName:"li"},"Put waypoints in pixhawk_v1/param/waypoints.txt or change the file location and name in usr_console.launch (waypoints_file param) based on your requirement. ")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Flight parameters(optional)"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"/pixhawk_v1/us_ws/nndp_cpp/include/optimization/OptimizationUtilities.h"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Safety distance: ",(0,l.kt)("strong",{parentName:"li"},"rTooClose"),"(default: 1.0)"),(0,l.kt)("li",{parentName:"ul"},"Vehicle size: ",(0,l.kt)("strong",{parentName:"li"},"rVehicle"),"(default: 0.4)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"/pixhawk_v1/us_ws/edt/src/edt_node_laser_realdrone.cpp"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"compress range for 2d mapping: (default: ",(0,l.kt)("strong",{parentName:"li"},"FLYHEIGHT-0.4, FLYHEIGHT+0.2"),")",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"su->updateEDTMap(FLYHEIGHT-0.4, FLYHEIGHT+0.2, center)"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"/pixhawk_v1/us_ws/nndp_cpp/src/nndp_cpp_node.cpp"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"flight speed: ",(0,l.kt)("strong",{parentName:"li"},"ran.loc_h"),"(default: 2), ",(0,l.kt)("strong",{parentName:"li"},"ran.loc_v"),"(default: 1).\nModify from 1(low speed) to 5(high speed).")))),(0,l.kt)("ol",{start:4},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"https://www.stereolabs.com/docs/ros/zed_node/"},"zed camera parameters")," (optional)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Please put calibration param under /usr/local/zed/settings with SNxxxx.conf as it's name"),(0,l.kt)("li",{parentName:"ul"},"Change camera param in edt.yaml file under edt package."),(0,l.kt)("li",{parentName:"ul"},"Change frequency of zed from tools/ZED Exlplorer",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Remember to change frequency param in zed.launch file"),(0,l.kt)("li",{parentName:"ul"},"Remember to change the noise param in vision_sensor_fix_pixhawk.yaml as well "))),(0,l.kt)("li",{parentName:"ul"},"If you want to use zed only instead of VIO, change the use_zed_only param in pixhawk.launch to true and change the the param file under edt from edt.yaml to edt_mini.yaml")),(0,l.kt)("ol",{start:5},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"zed auto explosure (optional)"),(0,l.kt)("p",{parentName:"li"},"rosrun rqt_reconfigure rqt_reconfigure"))),(0,l.kt)("h3",{id:"step-2-running"},"Step 2: Running"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"simulator testing")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ sh v2_pixhawk.sh\n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Real flight testing")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'$ sh v2_pixhawk_simulation.sh\n\n*if you want to test pixhawk only without other high level modules, then just run: "roslaunch mavros px4.launch system_id:=6(for example)"*\n')),(0,l.kt)("h3",{id:"step-3-system-checking"},"Step 3: System checking"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"check vio status, whether the location and heading is correct"),(0,l.kt)("li",{parentName:"ol"},"check mapping status, whether or not good to fly")),(0,l.kt)("h3",{id:"step-4-take-off"},"Step 4: Take off"),(0,l.kt)("h4",{id:"method-1-web-ui"},"Method 1: web UI"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Check the ip adress of the drone"),(0,l.kt)("li",{parentName:"ol"},"Search the address in your web browser\nYou will be able to see the UI if everything goes well"),(0,l.kt)("li",{parentName:"ol"},"Send command by clicking each buttons",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Engine0"),(0,l.kt)("li",{parentName:"ul"},"Takeoff"),(0,l.kt)("li",{parentName:"ul"},"Mission")))),(0,l.kt)("h4",{id:"method-2-previous-user-console"},"Method 2: previous user console"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ roslaunch usr_console usr_console.launch \n")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Clear previous reference on pixhawk")),(0,l.kt)("p",null,"wait till all the plugins have been loaded and them input ",(0,l.kt)("strong",{parentName:"p"},"engine0")," command in the terminal."),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"take off")),(0,l.kt)("p",null,"Input ",(0,l.kt)("strong",{parentName:"p"},"Engage")," command in the terminal."),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Send waypoints command."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Global waypoints: ",(0,l.kt)("strong",{parentName:"li"},"mission*")," ")),(0,l.kt)("p",{parentName:"li"},"This command will load the waypoints.txt where all the points are in global NWU frame (True North)."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Local waypoints: ",(0,l.kt)("strong",{parentName:"li"},"waypoints*")," ")),(0,l.kt)("p",{parentName:"li"},"This command will load the waypoints.txt file but all the waypoints is in local NWU frame."))),(0,l.kt)("h3",{id:"step-5-landing"},"step 5: landing"),(0,l.kt)("h2",{id:"useful-command"},"Useful Command"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Screen",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Re-attach screen: screen -r nameOfSession"),(0,l.kt)("li",{parentName:"ul"},"Detach screen: ctrl+A+D"),(0,l.kt)("li",{parentName:"ul"},"Kill all sessions"))),(0,l.kt)("li",{parentName:"ul"},"Check GPU usage")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ sudo ~/tegrastats --interval <int> --logfile <out_file> &\nFor example:\n$ sudo ~/tegrastats --interval 5000 --logfile ~/pixhawk #This command probes every 5 seconds\n")),(0,l.kt)("p",null,"The out put is similar to this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"RAM 2135/7855MB (lfb 1057x4MB) CPU [2%@2035,0%@2035,0%@2035,2%@2035,2%@2036,2%@2035] EMC_FREQ 1%@1866 GR3D_FREQ 0%@1300 APE 150 MTS fg 0% bg 0% BCPU@30C MCPU@30C GPU@29C PLL@30C Tboard@28C Tdiode@28.25C PMIC@100C thermal@29.4C VDD_IN 3104/4029 VDD_CPU 291/730 VDD_GPU 145/207 VDD_SOC 727/746 VDD_WIFI 0/180 VDD_DDR 1248/1375\n")),(0,l.kt)("p",null,"Please check ",(0,l.kt)("a",{parentName:"p",href:"https://docs.nvidia.com/jetson/l4t/index.html#page/Tegra%2520Linux%2520Driver%2520Package%2520Development%2520Guide%2FAppendixTegraStats.html"},"tegrastats utility reports")," to get more info about the stats."),(0,l.kt)("p",null,"The data we normally care about are:"),(0,l.kt)("blockquote",null,(0,l.kt)("ul",{parentName:"blockquote"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"RAM X/Y"),": X is the amount of RAM in use in MB."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"CPU ","[X%@Z, Y%@Z,...]"),": Load statistics for each of the CPU cores relative to the current running frequency Z."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"GR3D_FREQ X%@Y"),": Percent of the GR3D that is being used, relative to the current running frequency. GR3D is the GPU engine."))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Hotspot setup"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Enable broadcast of SSID (self wifi mode)")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"$ echo 2 > /sys/module/bcmdhd/parameters/op_mode\n")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Change back to normal wifi mode")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"$ echo 0 > /sys/module/bcmdhd/parameters/op_mode\n")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"To make it persistent\nAdd line ",(0,l.kt)("inlineCode",{parentName:"p"},"options bcmdhd op_mode=2")," in ",(0,l.kt)("inlineCode",{parentName:"p"},"nano /etc/modprobe.d/bcmdhd.conf"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Change ip address\nAdd line ",(0,l.kt)("inlineCode",{parentName:"p"},"address1=192.168.1.150/24"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Fan"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"stop fan")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"$ sudo -s \n$ cd /sys/kernel/debug/tegra_fan/\n$ echo 0 > target_pwm\n")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Check temperature")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"$ watch -n 1 cat /sys/class/thermal/thermal_zone?/temp \n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Submodule"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Add a new submodule with a branch name")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"$ git submodule add -b branch_name  https://bitbucket.org/nusuav/repo_name.git\n")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Remove a submodule")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"$ git submodule deinit -f submodule_name (The name of the submodule is the same as the repo's name)   \n$ rm -rf .git/modules/submodule_name\n$ git rm -f submodule_name\n")))))}d.isMDXComponent=!0}}]);