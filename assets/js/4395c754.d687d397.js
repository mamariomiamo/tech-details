(self.webpackChunktech_details=self.webpackChunktech_details||[]).push([[6673],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return m},kt:function(){return d}});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},m=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),p=l(t),d=i,f=p["".concat(s,".").concat(d)]||p[d]||u[d]||a;return t?r.createElement(f,o(o({ref:n},m),{},{components:t})):r.createElement(f,o({ref:n},m))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=p;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var l=2;l<a;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},45945:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return m},default:function(){return p}});var r=t(22122),i=t(19756),a=(t(67294),t(3905)),o=["components"],c={hide_title:!0,sidebar_label:"Kalibr Result Conventions"},s="Kalibr Result Conventions",l={unversionedId:"research/calibration/kalibr-result-conventions",id:"research/calibration/kalibr-result-conventions",isDocsHomePage:!1,title:"Kalibr Result Conventions",description:"The conventions used by Kalibr is briefly discussed here//github.com/ethz-asl/kalibr/wiki/yaml-formats",source:"@site/docs/research/calibration/kalibr-result-conventions.md",sourceDirName:"research/calibration",slug:"/research/calibration/kalibr-result-conventions",permalink:"/tech-details/docs/research/calibration/kalibr-result-conventions",version:"current",lastUpdatedAt:1626243292,formattedLastUpdatedAt:"7/14/2021",frontMatter:{hide_title:!0,sidebar_label:"Kalibr Result Conventions"},sidebar:"researchSidebar",previous:{title:"Calibration Targets & Params",permalink:"/tech-details/docs/research/calibration/calibration-target-params"},next:{title:"Calibration Procedures",permalink:"/tech-details/docs/research/calibration/calibration-procedures"}},m=[{value:"Camera Model (Intrinsics)",id:"camera-model-intrinsics",children:[]},{value:"Transformation Matrices",id:"transformation-matrices",children:[{value:"Example Files",id:"example-files",children:[]}]}],u={toc:m};function p(e){var n=e.components,t=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"kalibr-result-conventions"},"Kalibr Result Conventions"),(0,a.kt)("p",null,"The conventions used by Kalibr is briefly discussed here: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ethz-asl/kalibr/wiki/yaml-formats"},"https://github.com/ethz-asl/kalibr/wiki/yaml-formats")),(0,a.kt)("h2",{id:"camera-model-intrinsics"},"Camera Model (Intrinsics)"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Pinhole ","[fu fv pu pv]"),(0,a.kt)("li",{parentName:"ul"},"Double Sphere (ds): ","[xi alpha fu fv pu pv]")),(0,a.kt)("h2",{id:"transformation-matrices"},"Transformation Matrices"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"T_cn_cnm1"),": Transform ",(0,a.kt)("inlineCode",{parentName:"p"},"cam0")," (",(0,a.kt)("inlineCode",{parentName:"p"},"cnm1"),"?) coordinates to ",(0,a.kt)("inlineCode",{parentName:"p"},"cam1")," (last camera, denoted as ",(0,a.kt)("inlineCode",{parentName:"p"},"cn"),") coordinates (i.e. T_cn_cnm1 = T_c1_c0). Therefore it consists of:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"$R_{c_1c_0}$ or R_c1_c0 formed by basis vectors of ",(0,a.kt)("inlineCode",{parentName:"li"},"cam0")," frame in ",(0,a.kt)("inlineCode",{parentName:"li"},"cam1")," coordinates"),(0,a.kt)("li",{parentName:"ul"},"$t_{c_1c_0}$ or t_c1_c0 which is the position of the ",(0,a.kt)("inlineCode",{parentName:"li"},"cam0")," frame's origin in ",(0,a.kt)("inlineCode",{parentName:"li"},"cam1")," coordinates")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"T_cam_imu")," Transform ",(0,a.kt)("inlineCode",{parentName:"p"},"imu")," coordinates to camera coordnates. It consists of:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"$R_{ci}$ or R_c_i formed by basis vectors of ",(0,a.kt)("inlineCode",{parentName:"li"},"imu")," frame in ",(0,a.kt)("inlineCode",{parentName:"li"},"cam")," coordinates"),(0,a.kt)("li",{parentName:"ul"},"$t_{ci}$ or t_c_i which is the position of the imu frame's origin in the ",(0,a.kt)("inlineCode",{parentName:"li"},"cam")," coordinates")),(0,a.kt)("h3",{id:"example-files"},"Example Files"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="camchain-2020-08-05-16-24-56.yaml"',title:'"camchain-2020-08-05-16-24-56.yaml"'},"\ncam0:\n  cam_overlaps: [1]\n  camera_model: ds\n  distortion_coeffs: []\n  distortion_model: none\n  intrinsics: [-0.19963086018860057, 0.5924590037637837, 317.552559595926, 316.1745713358917,\n    724.8551471226007, 546.5708052642561]\n  resolution: [1440, 1080]\n  rostopic: /tiscamera_ros/fisheye_left/image_rect_raw\ncam1:\n  T_cn_cnm1:\n  - [0.9994397899015358, 0.01583231520610129, 0.029486338477008038, -0.1982100882850154]\n  - [-0.014069141538300084, 0.9981545353408604, -0.05907269110882186, -0.003226884424352984]\n  - [-0.03036717994712894, 0.05862475052124023, 0.9978181061738522, 0.0003909535695235701]\n  - [0.0, 0.0, 0.0, 1.0]\n  cam_overlaps: [0]\n  camera_model: ds\n  distortion_coeffs: []\n  distortion_model: none\n  intrinsics: [-0.19567833352036393, 0.5934771139662725, 318.54033139830346, 317.0520130252999,\n    712.7496608380312, 557.2224352962965]\n  resolution: [1440, 1080]\n  rostopic: /tiscamera_ros/fisheye_right/image_rect_raw\n\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="camchain-imucam-2020-08-05-16-54-55.yaml"',title:'"camchain-imucam-2020-08-05-16-54-55.yaml"'},"cam0:\n  T_cam_imu:\n  - [0.025462230671673247, -0.9992630992296517, -0.02872165258433318, 0.004244697665851643]\n  - [0.04993886668011138, 0.029966538262921255, -0.9983026175360077, 0.003320133241428618]\n  - [0.9984276560692467, 0.023984684748595442, 0.050665081600466455, 0.015700839664599384]\n  - [0.0, 0.0, 0.0, 1.0]\n  cam_overlaps: [1]\n  camera_model: ds\n  distortion_coeffs: []\n  distortion_model: none\n  intrinsics: [-0.21697771106770586, 0.5920493574492033, 312.2320475101821, 311.05174019378734,\n    725.0950280082754, 545.2634687518469]\n  resolution: [1440, 1080]\n  rostopic: /tiscamera_ros/fisheye_left/image_rect_raw\n  timeshift_cam_imu: 0.07650780716660849\ncam1:\n  T_cam_imu:\n  - [0.05736274985627546, -0.9977239680238397, -0.03544571285346676, -0.1921825607480451]\n  - [-0.02404388231864263, 0.03411324897586468, -0.999128709410033, -0.003544617933287773]\n  - [0.9980638289468132, 0.05816502278066027, -0.02203232790586701, 0.013584152644111497]\n  - [0.0, 0.0, 0.0, 1.0]\n  T_cn_cnm1:\n  - [0.9994673874821907, 0.00835184517590277, 0.03154660111141055, -0.1969480349995947]\n  - [-0.006003694095546954, 0.9972543376065331, -0.0738088191353987, -0.005671290908341935]\n  - [-0.032076424625132306, 0.0735801114915753, 0.9967733293864537, -0.002174166631870157]\n  - [0.0, 0.0, 0.0, 1.0]\n  cam_overlaps: [0]\n  camera_model: ds\n  distortion_coeffs: []\n  distortion_model: none\n  intrinsics: [-0.24136341506123252, 0.581315342400733, 301.55643035207885, 300.1877223496746,\n    714.9295565564267, 560.0563142309148]\n  resolution: [1440, 1080]\n  rostopic: /tiscamera_ros/fisheye_right/image_rect_raw\n  timeshift_cam_imu: 0.04030756527247593\n\n")))}p.isMDXComponent=!0}}]);